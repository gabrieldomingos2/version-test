from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
import os

# Importando os routers
from app.api.routers import core, kmz, simulation

# ============================
# ‚úÖ Inst√¢ncia do FastAPI
# ============================
app = FastAPI(
    title="Irricontrol Simulador API",
    version="1.0.0",
    description="üöÄ API oficial do Simulador de Sinal Irricontrol",
)

# ============================
# ‚úÖ CORS (libera√ß√£o de frontends autorizados)
# ============================
allowed_origins = [
    "https://irricontrol-test.netlify.app",
]

# Permite origens locais se estiver em ambiente de desenvolvimento
if os.getenv("FASTAPI_ENV", "production") == "development":
    allowed_origins.extend([
        "http://localhost:3000",
        "http://localhost:8000",
        "http://localhost:8080",
        "http://127.0.0.1:5500",
        "http://localhost:5500" # Adicionado por seguran√ßa
    ])

app.add_middleware(
    CORSMiddleware,
    allow_origins=list(set(allowed_origins)), # Garante origens √∫nicas
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# ============================
# ‚úÖ Diret√≥rios e arquivos
# ============================

# Pega o diret√≥rio ONDE ESTE ARQUIVO (main.py) est√°
APP_DIR = os.path.dirname(os.path.abspath(__file__))

# Sobe um n√≠vel para chegar ao diret√≥rio RAIZ do projeto (onde 'app', 'static', 'arquivos' devem estar)
# Se sua estrutura for diferente, ajuste esta linha!
PROJECT_ROOT = os.path.dirname(APP_DIR) 

# --- CORRE√á√ÉO APLICADA AQUI ---
# Aponta para a pasta 'static' na RAIZ do projeto
STATIC_DIR = os.path.join(PROJECT_ROOT, "static") 
# Aponta para a pasta 'arquivos' na RAIZ do projeto
ARQUIVOS_DIR_MAIN = os.path.join(PROJECT_ROOT, "arquivos")
# --- FIM DA CORRE√á√ÉO ---


# Cria as pastas caso n√£o existam
# √â crucial que o processo que SALVA as imagens use EXATAMENTE este 'STATIC_DIR'
os.makedirs(os.path.join(STATIC_DIR, "imagens"), exist_ok=True)
os.makedirs(ARQUIVOS_DIR_MAIN, exist_ok=True)

# Imprime os caminhos para depura√ß√£o ao iniciar o servidor
print(f"üóÇÔ∏è PROJECT_ROOT ‚Üí {PROJECT_ROOT}")
print(f"üóÇÔ∏è STATIC_DIR (usado para servir) ‚Üí {STATIC_DIR}")
print(f"üóÇÔ∏è ARQUIVOS_DIR_MAIN (usado para uploads) ‚Üí {ARQUIVOS_DIR_MAIN}")

# ============================
# ‚úÖ Montagem dos arquivos est√°ticos
# ============================
# Diz ao FastAPI: "Quando o navegador pedir '/static/...', 
# procure os arquivos dentro do diret√≥rio definido em STATIC_DIR."
app.mount("/static", StaticFiles(directory=STATIC_DIR), name="static")

# ============================
# ‚úÖ Rotas da API
# ============================
app.include_router(core.router, prefix="/core", tags=["Core"])
app.include_router(kmz.router, prefix="/kmz", tags=["KMZ"])
app.include_router(simulation.router, prefix="/simulation", tags=["Simulation"])

# ============================
# ‚úÖ Endpoint raiz
# ============================
@app.get("/", tags=["Root"])
async def read_root():
    return {
        "message": "üöÄ Bem-vindo √† API do Simulador Irricontrol",
        "status": "üü¢ Online",
        "docs": "/docs",
        "static_check": f"Verifique se voc√™ pode acessar: /static/imagens/NOME_DA_SUA_IMAGEM.png",
    }

# ============================
# ‚úÖ Execu√ß√£o direta local (opcional)
# ============================
# if __name__ == "__main__":
#     import uvicorn
#     uvicorn.run("app.main:app", host="0.0.0.0", port=8000, reload=True)